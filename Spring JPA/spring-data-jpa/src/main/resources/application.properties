#권고
spring.datasource.url=jdbc:h2:mem:testdb;NON_KEYWORDS=USER
spring.data.jpa.repositories.bootstrap-mode=default
spring.jpa.defer-datasource-initialization=true

#수업; 어떻게 실행되는지 콘솔에서 봀 수 있음
spring.h2.console.enabled=true
#turn statistics on
spring.jpa.properties.hibernate.generate_statistics=true
logging.level.org.hibernate.stat=debug
#show all queries
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate=trace

#Second Level Cache - Ehcache
#1. enable second level cache
#first level이 default인데 second level로 바꿈
#second level하고 *foreign key없는* 엔티티 조회하면 처음 조회할 때는 로그에 1 jdbc statements, 1 L2C misses 찍힘
#근데 다시 조회하면 0 jdbc statements, 0 L2C misses라고 찍힘, 캐시에 없었는데 생겨서 쿼리문 안날리고 캐시에서 가져왔다는 뜻
#1단계면 불가능 같은 트랜잭션에서만 가능해서. 그니까 엔티티 상세 조회 메서드 안에서 1번 인덱스를 2번 불러서 2번째는 캐시에서 가져온다 그러면 1단곈데
#상세 조회 메서드 자체를 2번(1번 인덱스를 4번 부르는거지) 불렀을 때 캐시에 아직 저장돼서 3,4번째 부를 때도 캐시에서 불러온다 그러면 2단계
spring.jpa.properties.hibernate.cache.use_second_level_cache=true
#2. specify the caching framework - JCache
spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.jcache.internal.JCacheRegionFactory
#3. Only cache what I tell to cache
# 선택한 엔티티만 읽어온다 @Cacheable
spring.jpa.properties.jakarta.persistence.sharedCache.mode=ENABLE_SELECTIVE
logging.level.net.sf.ehcache=debug
#4. What data to cache?